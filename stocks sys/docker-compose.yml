version: '3.8'

services:
  # Main application service
  stock-analysis-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock-analysis-app
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///./data/stocks_prod.db
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ENCRYPTION_PASSWORD=${ENCRYPTION_PASSWORD:-your-encryption-password}
      - ENCRYPTION_SALT=${ENCRYPTION_SALT:-your-encryption-salt}
      - LOG_LEVEL=INFO
      - DEBUG=false
    volumes:
      - stock_data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stock-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: stock-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - stock-network

  # PostgreSQL database (alternative to SQLite for production)
  postgres:
    image: postgres:15-alpine
    container_name: stock-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-stockanalysis}
      - POSTGRES_USER=${POSTGRES_USER:-stockuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-stockpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - stock-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: stock-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - stock-analysis-app
    restart: unless-stopped
    networks:
      - stock-network

volumes:
  stock_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  stock-network:
    driver: bridge

# Development override
---
# docker-compose.override.yml (for development)
version: '3.8'

services:
  stock-analysis-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=sqlite:///./data/stocks_dev.db
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ./src/backend:/app:ro
      - ./src/frontend/build:/app/static:ro
      - stock_data_dev:/app/data
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  stock_data_dev:
    driver: local